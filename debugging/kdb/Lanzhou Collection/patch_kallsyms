--- modutils-2.4.12/obj/obj_kallsyms.c.orig Thu Jan 4 20:45:19 2001
+++ modutils-2.4.12/obj/obj_kallsyms.c Tue Jan 15 05:17:43 2002
@@ -250,6 +250,8 @@
 for (sym = fin->symtab[i]; sym ; sym = sym->next) {
 if (!sym || sym->secidx >= fin->header.e_shnum)
 continue;
+ if (ELFW(ST_BIND)(sym->info) == STB_LOCAL)
+ continue;
 if ((a_sym.section_off = fin_to_allsym_map[sym->secidx]) == -1)
 continue;
 if (strcmp(sym->name, "gcc2_compiled.") == 0 ||
@@ -263,6 +265,23 @@
 append_string(sym->name, &strings, &strings_size, &strings_left);
 ++a_hdr->symbols;
 }
+ }
+ for (i = 0; i < fin->local_symtab_size; ++i) {
+ struct obj_symbol *sym = fin->local_symtab[i];
+ if (!sym || sym->secidx >= fin->header.e_shnum)
+ continue;
+ if ((a_sym.section_off = fin_to_allsym_map[sym->secidx]) == -1)
+ continue;
+ if (strcmp(sym->name, "gcc2_compiled.") == 0 ||
+ strncmp(sym->name, "__insmod_", 9) == 0)
+ continue;
+ a_sym.symbol_addr = sym->value;
+ if (fin->header.e_type == ET_REL)
+ a_sym.symbol_addr += fin->sections[sym->secidx]->header.sh_addr;
+ a_sym.name_off = strings_size - strings_left;
+ append_symbol(&a_sym, &symbols, &symbols_size, &symbols_left);
+ append_string(sym->name, &strings, &strings_size, &strings_left);
+ ++a_hdr->symbols;
 }
 free(fin_to_allsym_map);

